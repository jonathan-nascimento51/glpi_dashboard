# GLPI Dashboard - Development Override
# ====================================
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  # Backend Development Overrides
  backend:
    build:
      target: development
    volumes:
      - ./backend:/app/backend
      - ./scripts:/app/scripts
      - ./tests:/app/tests
      - ./logs:/app/logs
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./requirements.txt:/app/requirements.txt:ro
      - backend_dev_cache:/app/.cache
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - FLASK_RELOAD=True
      - LOG_LEVEL=DEBUG
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        echo 'Installing development dependencies...' &&
        pip install -e .[dev] &&
        echo 'Starting Flask development server...' &&
        flask run --host=0.0.0.0 --port=5000 --reload
      "
    ports:
      - "5000:5000"
      - "5678:5678"  # Debug port

  # Frontend Development Overrides
  frontend:
    build:
      target: development
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:5000
      - VITE_DEV_SERVER_PORT=3001
      - VITE_HMR_PORT=3001
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: >
      sh -c "
        echo 'Installing frontend dependencies...' &&
        npm ci &&
        echo 'Starting Vite development server...' &&
        npm run dev -- --host 0.0.0.0 --port 3001
      "
    ports:
      - "3001:3001"
      - "24678:24678"  # Vite HMR port

  # Redis Development Configuration
  redis:
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"

  # Development Tools Container
  dev-tools:
    build:
      context: .
      dockerfile: docker/dev-tools/Dockerfile
    container_name: glpi_dashboard_dev_tools
    volumes:
      - .:/workspace
      - dev_tools_cache:/root/.cache
    working_dir: /workspace
    environment:
      - PYTHONPATH=/workspace
      - NODE_ENV=development
    networks:
      - glpi_network
    profiles:
      - dev-tools
    command: tail -f /dev/null  # Keep container running

  # Hot Reload Proxy (for better development experience)
  dev-proxy:
    image: nginx:alpine
    container_name: glpi_dashboard_dev_proxy
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - glpi_network
    profiles:
      - dev-proxy

volumes:
  backend_dev_cache:
    driver: local
  dev_tools_cache:
    driver: local