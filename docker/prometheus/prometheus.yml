# GLPI Dashboard Prometheus Configuration
# =======================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'glpi-dashboard'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # GLPI Dashboard Backend
  - job_name: 'glpi-dashboard-backend'
    static_configs:
      - targets: ['backend:5000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s

  # Nginx monitoring
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:80']
    scrape_interval: 10s
    metrics_path: /nginx_status
    scrape_timeout: 5s

  # Node Exporter (if available)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 10s
    scrape_timeout: 5s

  # cAdvisor for container metrics (if available)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 10s
    scrape_timeout: 5s

  # Custom application metrics
  - job_name: 'glpi-dashboard-custom'
    static_configs:
      - targets: ['backend:5000']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    params:
      format: ['prometheus']
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: backend:5000

  # Health check endpoints
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'backend:5000'
        - 'frontend:80'
        - 'nginx:80'
    scrape_interval: 30s
    metrics_path: /health
    scrape_timeout: 5s
    honor_labels: true

# Remote write configuration (for external storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Remote read configuration (for external storage)
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true

# Web configuration
web:
  console.libraries: /etc/prometheus/console_libraries
  console.templates: /etc/prometheus/consoles
  enable-lifecycle: true
  enable-admin-api: false
  page-title: "GLPI Dashboard Prometheus"
  external-url: ""
  route-prefix: "/"
  user-assets: ""
  enable-remote-shutdown: false
  max-connections: 512
  read-timeout: 30s
  max-concurrent-queries: 20
  log.level: info
  log.format: logfmt